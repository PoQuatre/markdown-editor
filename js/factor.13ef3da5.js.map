{"mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/factor.js","node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["import {simpleMode} from \"./simple-mode.js\"\n\nexport const factor = simpleMode({\n    start: [\n      // comments\n      {regex: /#?!.*/, token: \"comment\"},\n      // strings \"\"\", multiline --> state\n      {regex: /\"\"\"/, token: \"string\", next: \"string3\"},\n      {regex: /(STRING:)(\\s)/, token: [\"keyword\", null], next: \"string2\"},\n      {regex: /\\S*?\"/, token: \"string\", next: \"string\"},\n      // numbers: dec, hex, unicode, bin, fractional, complex\n      {regex: /(?:0x[\\d,a-f]+)|(?:0o[0-7]+)|(?:0b[0,1]+)|(?:\\-?\\d+.?\\d*)(?=\\s)/, token: \"number\"},\n      //{regex: /[+-]?/} //fractional\n      // definition: defining word, defined word, etc\n      {regex: /((?:GENERIC)|\\:?\\:)(\\s+)(\\S+)(\\s+)(\\()/, token: [\"keyword\", null, \"def\", null, \"bracket\"], next: \"stack\"},\n      // method definition: defining word, type, defined word, etc\n      {regex: /(M\\:)(\\s+)(\\S+)(\\s+)(\\S+)/, token: [\"keyword\", null, \"def\", null, \"tag\"]},\n      // vocabulary using --> state\n      {regex: /USING\\:/, token: \"keyword\", next: \"vocabulary\"},\n      // vocabulary definition/use\n      {regex: /(USE\\:|IN\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"tag\"]},\n      // definition: a defining word, defined word\n      {regex: /(\\S+\\:)(\\s+)(\\S+)(?=\\s|$)/, token: [\"keyword\", null, \"def\"]},\n      // \"keywords\", incl. ; t f . [ ] { } defining words\n      {regex: /(?:;|\\\\|t|f|if|loop|while|until|do|PRIVATE>|<PRIVATE|\\.|\\S*\\[|\\]|\\S*\\{|\\})(?=\\s|$)/, token: \"keyword\"},\n      // <constructors> and the like\n      {regex: /\\S+[\\)>\\.\\*\\?]+(?=\\s|$)/, token: \"builtin\"},\n      {regex: /[\\)><]+\\S+(?=\\s|$)/, token: \"builtin\"},\n      // operators\n      {regex: /(?:[\\+\\-\\=\\/\\*<>])(?=\\s|$)/, token: \"keyword\"},\n      // any id (?)\n      {regex: /\\S+/, token: \"variable\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    vocabulary: [\n      {regex: /;/, token: \"keyword\", next: \"start\"},\n      {regex: /\\S+/, token: \"tag\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    string: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string2: [\n      {regex: /^;/, token: \"keyword\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    string3: [\n      {regex: /(?:[^\\\\]|\\\\.)*?\"\"\"/, token: \"string\", next: \"start\"},\n      {regex: /.*/, token: \"string\"}\n    ],\n    stack: [\n      {regex: /\\)/, token: \"bracket\", next: \"start\"},\n      {regex: /--/, token: \"bracket\"},\n      {regex: /\\S+/, token: \"meta\"},\n      {regex: /\\s+|./, token: null}\n    ],\n    languageData: {\n      dontIndentStates: [\"start\", \"vocabulary\", \"string\", \"string3\", \"stack\"],\n      commentTokens: {line: \"!\"}\n    }\n  });\n","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["$b25d2c23a962ce66$export$4564c084226129f7","parcelRequire","simpleMode","start","regex","token","next","vocabulary","string","string2","string3","stack","languageData","dontIndentStates","commentTokens","line","$1ca3295ce0cb30f9$export$cda2c962bd756348","states","$1ca3295ce0cb30f9$var$ensureState","states_","meta","hasIndentation","state1","hasOwnProperty","list","orig","i","length","data","push","$1ca3295ce0cb30f9$var$Rule","indent","dedent","startState","state","pending","copyState","s","slice","$1ca3295ce0cb30f9$var$tokenFunction","$1ca3295ce0cb30f9$var$indentFunction","name","Error","this","val","caret","flags","RegExp","ignoreCase","source","String","$1ca3295ce0cb30f9$var$toRegex","apply","replace","result","$1ca3295ce0cb30f9$var$asToken","stream","pend","shift","pos","text","curState","rule","matches","sol","match","pop","indentation","indentUnit","j","backUp","join","textAfter","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec"],"version":3,"file":"factor.13ef3da5.js.map"}