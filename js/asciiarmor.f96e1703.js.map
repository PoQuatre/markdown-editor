{"mappings":"+MAAA,SAASA,EAAgBC,GACvB,IAAIC,EAAQD,EAAOE,MAAK,UAExB,OADAF,EAAOG,YACAF,EAAQ,QAAU,8HAGpB,MAAMG,EAAa,CACxBC,MAAO,SAASL,EAAQM,GACtB,IAAIC,EACJ,GAAmB,OAAfD,EAAMA,MACR,OAAIN,EAAOQ,QAAUD,EAAIP,EAAOE,MAAK,gCACnCI,EAAMA,MAAQ,UACdA,EAAMG,KAAOF,EAAE,GACR,OAEFR,EAAgBC,GAClB,GAAmB,WAAfM,EAAMA,MAAkB,CACjC,GAAIN,EAAOQ,OAASR,EAAOE,MAAK,SAE9B,OADAI,EAAMA,MAAQ,SACP,OAEP,IAAII,EAASX,EAAgBC,GAE7B,OADIU,IAAQJ,EAAMA,MAAQ,QACnBI,EAEJ,MAAmB,UAAfJ,EAAMA,OACfN,EAAOG,YACPG,EAAMA,MAAQ,UACP,UACiB,QAAfA,EAAMA,MACXN,EAAOQ,QAAUD,EAAIP,EAAOE,MAAK,6BAC/BK,EAAE,IAAMD,EAAMG,KAAa,SAC/BH,EAAMA,MAAQ,MACP,OAEHN,EAAOW,SAAQ,mBACV,MAEPX,EAAOY,OACA,SAGa,OAAfN,EAAMA,MACRP,EAAgBC,QADlB,GAITa,UAAW,SAASP,GACC,WAAfA,EAAMA,QAAoBA,EAAMA,MAAQ,SAE9CQ,WAAY,WACV,MAAO,CAACR,MAAO,MAAOG,KAAM","sources":["node_modules/@codemirror/legacy-modes/mode/asciiarmor.js"],"sourcesContent":["function errorIfNotEmpty(stream) {\n  var nonWS = stream.match(/^\\s*\\S/);\n  stream.skipToEnd();\n  return nonWS ? \"error\" : null;\n}\n\nexport const asciiArmor = {\n  token: function(stream, state) {\n    var m;\n    if (state.state == \"top\") {\n      if (stream.sol() && (m = stream.match(/^-----BEGIN (.*)?-----\\s*$/))) {\n        state.state = \"headers\";\n        state.type = m[1];\n        return \"tag\";\n      }\n      return errorIfNotEmpty(stream);\n    } else if (state.state == \"headers\") {\n      if (stream.sol() && stream.match(/^\\w+:/)) {\n        state.state = \"header\";\n        return \"atom\";\n      } else {\n        var result = errorIfNotEmpty(stream);\n        if (result) state.state = \"body\";\n        return result;\n      }\n    } else if (state.state == \"header\") {\n      stream.skipToEnd();\n      state.state = \"headers\";\n      return \"string\";\n    } else if (state.state == \"body\") {\n      if (stream.sol() && (m = stream.match(/^-----END (.*)?-----\\s*$/))) {\n        if (m[1] != state.type) return \"error\";\n        state.state = \"end\";\n        return \"tag\";\n      } else {\n        if (stream.eatWhile(/[A-Za-z0-9+\\/=]/)) {\n          return null;\n        } else {\n          stream.next();\n          return \"error\";\n        }\n      }\n    } else if (state.state == \"end\") {\n      return errorIfNotEmpty(stream);\n    }\n  },\n  blankLine: function(state) {\n    if (state.state == \"headers\") state.state = \"body\";\n  },\n  startState: function() {\n    return {state: \"top\", type: null};\n  }\n};\n"],"names":["$e5f9db1dcde46600$var$errorIfNotEmpty","stream","nonWS","match","skipToEnd","$e5f9db1dcde46600$export$cdde252db42de3ee","token","state","m","sol","type","result","eatWhile","next","blankLine","startState"],"version":3,"file":"asciiarmor.f96e1703.js.map"}