{"mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/dockerfile.js","node_modules/@codemirror/legacy-modes/mode/simple-mode.js"],"sourcesContent":["import {simpleMode} from \"./simple-mode.js\"\n\nvar from = \"from\";\nvar fromRegex = new RegExp(\"^(\\\\s*)\\\\b(\" + from + \")\\\\b\", \"i\");\n\nvar shells = [\"run\", \"cmd\", \"entrypoint\", \"shell\"];\nvar shellsAsArrayRegex = new RegExp(\"^(\\\\s*)(\" + shells.join('|') + \")(\\\\s+\\\\[)\", \"i\");\n\nvar expose = \"expose\";\nvar exposeRegex = new RegExp(\"^(\\\\s*)(\" + expose + \")(\\\\s+)\", \"i\");\n\nvar others = [\n  \"arg\", \"from\", \"maintainer\", \"label\", \"env\",\n  \"add\", \"copy\", \"volume\", \"user\",\n  \"workdir\", \"onbuild\", \"stopsignal\", \"healthcheck\", \"shell\"\n];\n\n// Collect all Dockerfile directives\nvar instructions = [from, expose].concat(shells).concat(others),\n    instructionRegex = \"(\" + instructions.join('|') + \")\",\n    instructionOnlyLine = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s*)(#.*)?$\", \"i\"),\n    instructionWithArguments = new RegExp(\"^(\\\\s*)\" + instructionRegex + \"(\\\\s+)\", \"i\");\n\nexport const dockerFile = simpleMode({\n  start: [\n    // Block comment: This is a line starting with a comment\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: fromRegex,\n      token: [null, \"keyword\"],\n      sol: true,\n      next: \"from\"\n    },\n    // Highlight an instruction without any arguments (for convenience)\n    {\n      regex: instructionOnlyLine,\n      token: [null, \"keyword\", null, \"error\"],\n      sol: true\n    },\n    {\n      regex: shellsAsArrayRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"array\"\n    },\n    {\n      regex: exposeRegex,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"expose\"\n    },\n    // Highlight an instruction followed by arguments\n    {\n      regex: instructionWithArguments,\n      token: [null, \"keyword\", null],\n      sol: true,\n      next: \"arguments\"\n    },\n    {\n      regex: /./,\n      token: null\n    }\n  ],\n  from: [\n    {\n      regex: /\\s*$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      // Line comment without instruction arguments is an error\n      regex: /(\\s*)(#.*)$/,\n      token: [null, \"error\"],\n      next: \"start\"\n    },\n    {\n      regex: /(\\s*\\S+\\s+)(as)/i,\n      token: [null, \"keyword\"],\n      next: \"start\"\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  single: [\n    {\n      regex: /(?:[^\\\\']|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  double: [\n    {\n      regex: /(?:[^\\\\\"]|\\\\.)/,\n      token: \"string\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      pop: true\n    }\n  ],\n  array: [\n    {\n      regex: /\\]/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?/,\n      token: \"string\"\n    }\n  ],\n  expose: [\n    {\n      regex: /\\d+$/,\n      token: \"number\",\n      next: \"start\"\n    },\n    {\n      regex: /[^\\d]+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /\\d+/,\n      token: \"number\"\n    },\n    {\n      regex: /[^\\d]+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  arguments: [\n    {\n      regex: /^\\s*#.*$/,\n      sol: true,\n      token: \"comment\"\n    },\n    {\n      regex: /\"(?:[^\\\\\"]|\\\\.)*\"?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /\"/,\n      token: \"string\",\n      push: \"double\"\n    },\n    {\n      regex: /'(?:[^\\\\']|\\\\.)*'?$/,\n      token: \"string\",\n      next: \"start\"\n    },\n    {\n      regex: /'/,\n      token: \"string\",\n      push: \"single\"\n    },\n    {\n      regex: /[^#\"']+[\\\\`]$/,\n      token: null\n    },\n    {\n      regex: /[^#\"']+$/,\n      token: null,\n      next: \"start\"\n    },\n    {\n      regex: /[^#\"']+/,\n      token: null\n    },\n    // Fail safe return to start\n    {\n      token: null,\n      next: \"start\"\n    }\n  ],\n  languageData: {\n    commentTokens: {line: \"#\"}\n  }\n});\n\n","export function simpleMode(states) {\n  ensureState(states, \"start\");\n  var states_ = {}, meta = states.languageData || {}, hasIndentation = false;\n  for (var state in states) if (state != meta && states.hasOwnProperty(state)) {\n    var list = states_[state] = [], orig = states[state];\n    for (var i = 0; i < orig.length; i++) {\n      var data = orig[i];\n      list.push(new Rule(data, states));\n      if (data.indent || data.dedent) hasIndentation = true;\n    }\n  }\n  return {\n    startState: function() {\n      return {state: \"start\", pending: null, indent: hasIndentation ? [] : null};\n    },\n    copyState: function(state) {\n      var s = {state: state.state, pending: state.pending, indent: state.indent && state.indent.slice(0)};\n      if (state.stack)\n        s.stack = state.stack.slice(0);\n      return s;\n    },\n    token: tokenFunction(states_),\n    indent: indentFunction(states_, meta),\n    languageData: meta\n  }\n};\n\nfunction ensureState(states, name) {\n  if (!states.hasOwnProperty(name))\n    throw new Error(\"Undefined state \" + name + \" in simple mode\");\n}\n\nfunction toRegex(val, caret) {\n  if (!val) return /(?:)/;\n  var flags = \"\";\n  if (val instanceof RegExp) {\n    if (val.ignoreCase) flags = \"i\";\n    val = val.source;\n  } else {\n    val = String(val);\n  }\n  return new RegExp((caret === false ? \"\" : \"^\") + \"(?:\" + val + \")\", flags);\n}\n\nfunction asToken(val) {\n  if (!val) return null;\n  if (val.apply) return val\n  if (typeof val == \"string\") return val.replace(/\\./g, \" \");\n  var result = [];\n  for (var i = 0; i < val.length; i++)\n    result.push(val[i] && val[i].replace(/\\./g, \" \"));\n  return result;\n}\n\nfunction Rule(data, states) {\n  if (data.next || data.push) ensureState(states, data.next || data.push);\n  this.regex = toRegex(data.regex);\n  this.token = asToken(data.token);\n  this.data = data;\n}\n\nfunction tokenFunction(states) {\n  return function(stream, state) {\n    if (state.pending) {\n      var pend = state.pending.shift();\n      if (state.pending.length == 0) state.pending = null;\n      stream.pos += pend.text.length;\n      return pend.token;\n    }\n\n    var curState = states[state.state];\n    for (var i = 0; i < curState.length; i++) {\n      var rule = curState[i];\n      var matches = (!rule.data.sol || stream.sol()) && stream.match(rule.regex);\n      if (matches) {\n        if (rule.data.next) {\n          state.state = rule.data.next;\n        } else if (rule.data.push) {\n          (state.stack || (state.stack = [])).push(state.state);\n          state.state = rule.data.push;\n        } else if (rule.data.pop && state.stack && state.stack.length) {\n          state.state = state.stack.pop();\n        }\n\n        if (rule.data.indent)\n          state.indent.push(stream.indentation() + stream.indentUnit);\n        if (rule.data.dedent)\n          state.indent.pop();\n        var token = rule.token\n        if (token && token.apply) token = token(matches)\n        if (matches.length > 2 && rule.token && typeof rule.token != \"string\") {\n          state.pending = [];\n          for (var j = 2; j < matches.length; j++)\n            if (matches[j])\n              state.pending.push({text: matches[j], token: rule.token[j - 1]});\n          stream.backUp(matches[0].length - (matches[1] ? matches[1].length : 0));\n          return token[0];\n        } else if (token && token.join) {\n          return token[0];\n        } else {\n          return token;\n        }\n      }\n    }\n    stream.next();\n    return null;\n  };\n}\n\nfunction indentFunction(states, meta) {\n  return function(state, textAfter) {\n    if (state.indent == null || meta.dontIndentStates && meta.doneIndentState.indexOf(state.state) > -1)\n      return null\n\n    var pos = state.indent.length - 1, rules = states[state.state];\n    scan: for (;;) {\n      for (var i = 0; i < rules.length; i++) {\n        var rule = rules[i];\n        if (rule.data.dedent && rule.data.dedentIfLineStart !== false) {\n          var m = rule.regex.exec(textAfter);\n          if (m && m[0]) {\n            pos--;\n            if (rule.next || rule.push) rules = states[rule.next || rule.push];\n            textAfter = textAfter.slice(m[0].length);\n            continue scan;\n          }\n        }\n      }\n      break;\n    }\n    return pos < 0 ? 0 : state.indent[pos];\n  };\n}\n"],"names":["$93fXm","parcelRequire","$ca28e2c975e08f87$var$from","$ca28e2c975e08f87$var$fromRegex","RegExp","$ca28e2c975e08f87$var$shells","$ca28e2c975e08f87$var$shellsAsArrayRegex","join","$ca28e2c975e08f87$var$expose","$ca28e2c975e08f87$var$exposeRegex","$ca28e2c975e08f87$var$instructionRegex","concat","$ca28e2c975e08f87$var$instructionOnlyLine","$ca28e2c975e08f87$var$instructionWithArguments","$ca28e2c975e08f87$export$a6d35980398aa9a1","simpleMode","start","regex","sol","token","next","from","single","pop","double","array","expose","arguments","push","languageData","commentTokens","line","$6970c5814eabeef0$export$cda2c962bd756348","states","$6970c5814eabeef0$var$ensureState","states_","meta","hasIndentation","state1","hasOwnProperty","list","orig","i","length","data","$6970c5814eabeef0$var$Rule","indent","dedent","startState","state","pending","copyState","s","slice","stack","$6970c5814eabeef0$var$tokenFunction","$6970c5814eabeef0$var$indentFunction","name","Error","this","val","caret","flags","ignoreCase","source","String","$6970c5814eabeef0$var$toRegex","apply","replace","result","$6970c5814eabeef0$var$asToken","stream","pend","shift","pos","text","curState","rule","matches","match","indentation","indentUnit","j","backUp","textAfter","dontIndentStates","doneIndentState","indexOf","rules","scan","dedentIfLineStart","m","exec"],"version":3,"file":"dockerfile.17758274.js.map"}