{"mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/stex.js"],"sourcesContent":["function mkStex(mathMode) {\n  function pushCommand(state, command) {\n    state.cmdState.push(command);\n  }\n\n  function peekCommand(state) {\n    if (state.cmdState.length > 0) {\n      return state.cmdState[state.cmdState.length - 1];\n    } else {\n      return null;\n    }\n  }\n\n  function popCommand(state) {\n    var plug = state.cmdState.pop();\n    if (plug) {\n      plug.closeBracket();\n    }\n  }\n\n  // returns the non-default plugin closest to the end of the list\n  function getMostPowerful(state) {\n    var context = state.cmdState;\n    for (var i = context.length - 1; i >= 0; i--) {\n      var plug = context[i];\n      if (plug.name == \"DEFAULT\") {\n        continue;\n      }\n      return plug;\n    }\n    return { styleIdentifier: function() { return null; } };\n  }\n\n  function addPluginPattern(pluginName, cmdStyle, styles) {\n    return function () {\n      this.name = pluginName;\n      this.bracketNo = 0;\n      this.style = cmdStyle;\n      this.styles = styles;\n      this.argument = null;   // \\begin and \\end have arguments that follow. These are stored in the plugin\n\n      this.styleIdentifier = function() {\n        return this.styles[this.bracketNo - 1] || null;\n      };\n      this.openBracket = function() {\n        this.bracketNo++;\n        return \"bracket\";\n      };\n      this.closeBracket = function() {};\n    };\n  }\n\n  var plugins = {};\n\n  plugins[\"importmodule\"] = addPluginPattern(\"importmodule\", \"tag\", [\"string\", \"builtin\"]);\n  plugins[\"documentclass\"] = addPluginPattern(\"documentclass\", \"tag\", [\"\", \"atom\"]);\n  plugins[\"usepackage\"] = addPluginPattern(\"usepackage\", \"tag\", [\"atom\"]);\n  plugins[\"begin\"] = addPluginPattern(\"begin\", \"tag\", [\"atom\"]);\n  plugins[\"end\"] = addPluginPattern(\"end\", \"tag\", [\"atom\"]);\n\n  plugins[\"label\"    ] = addPluginPattern(\"label\"    , \"tag\", [\"atom\"]);\n  plugins[\"ref\"      ] = addPluginPattern(\"ref\"      , \"tag\", [\"atom\"]);\n  plugins[\"eqref\"    ] = addPluginPattern(\"eqref\"    , \"tag\", [\"atom\"]);\n  plugins[\"cite\"     ] = addPluginPattern(\"cite\"     , \"tag\", [\"atom\"]);\n  plugins[\"bibitem\"  ] = addPluginPattern(\"bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"Bibitem\"  ] = addPluginPattern(\"Bibitem\"  , \"tag\", [\"atom\"]);\n  plugins[\"RBibitem\" ] = addPluginPattern(\"RBibitem\" , \"tag\", [\"atom\"]);\n\n  plugins[\"DEFAULT\"] = function () {\n    this.name = \"DEFAULT\";\n    this.style = \"tag\";\n\n    this.styleIdentifier = this.openBracket = this.closeBracket = function() {};\n  };\n\n  function setState(state, f) {\n    state.f = f;\n  }\n\n  // called when in a normal (no environment) context\n  function normal(source, state) {\n    var plug;\n    // Do we look like '\\command' ?  If so, attempt to apply the plugin 'command'\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      var cmdName = source.current().slice(1);\n      plug = plugins.hasOwnProperty(cmdName) ? plugins[cmdName] : plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      setState(state, beginParams);\n      return plug.style;\n    }\n\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/\\\\]/)) {\n      return \"tag\";\n    }\n\n    // find if we're starting various math modes\n    if (source.match(\"\\\\[\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\]\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"\\\\(\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"\\\\)\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$$\"); });\n      return \"keyword\";\n    }\n    if (source.match(\"$\")) {\n      setState(state, function(source, state){ return inMathMode(source, state, \"$\"); });\n      return \"keyword\";\n    }\n\n    var ch = source.next();\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    } else if (ch == '}' || ch == ']') {\n      plug = peekCommand(state);\n      if (plug) {\n        plug.closeBracket(ch);\n        setState(state, beginParams);\n      } else {\n        return \"error\";\n      }\n      return \"bracket\";\n    } else if (ch == '{' || ch == '[') {\n      plug = plugins[\"DEFAULT\"];\n      plug = new plug();\n      pushCommand(state, plug);\n      return \"bracket\";\n    } else if (/\\d/.test(ch)) {\n      source.eatWhile(/[\\w.%]/);\n      return \"atom\";\n    } else {\n      source.eatWhile(/[\\w\\-_]/);\n      plug = getMostPowerful(state);\n      if (plug.name == 'begin') {\n        plug.argument = source.current();\n      }\n      return plug.styleIdentifier();\n    }\n  }\n\n  function inMathMode(source, state, endModeSeq) {\n    if (source.eatSpace()) {\n      return null;\n    }\n    if (endModeSeq && source.match(endModeSeq)) {\n      setState(state, normal);\n      return \"keyword\";\n    }\n    if (source.match(/^\\\\[a-zA-Z@]+/)) {\n      return \"tag\";\n    }\n    if (source.match(/^[a-zA-Z]+/)) {\n      return \"variableName.special\";\n    }\n    // escape characters\n    if (source.match(/^\\\\[$&%#{}_]/)) {\n      return \"tag\";\n    }\n    // white space control characters\n    if (source.match(/^\\\\[,;!\\/]/)) {\n      return \"tag\";\n    }\n    // special math-mode characters\n    if (source.match(/^[\\^_&]/)) {\n      return \"tag\";\n    }\n    // non-special characters\n    if (source.match(/^[+\\-<>|=,\\/@!*:;'\"`~#?]/)) {\n      return null;\n    }\n    if (source.match(/^(\\d+\\.\\d*|\\d*\\.\\d+|\\d+)/)) {\n      return \"number\";\n    }\n    var ch = source.next();\n    if (ch == \"{\" || ch == \"}\" || ch == \"[\" || ch == \"]\" || ch == \"(\" || ch == \")\") {\n      return \"bracket\";\n    }\n\n    if (ch == \"%\") {\n      source.skipToEnd();\n      return \"comment\";\n    }\n    return \"error\";\n  }\n\n  function beginParams(source, state) {\n    var ch = source.peek(), lastPlug;\n    if (ch == '{' || ch == '[') {\n      lastPlug = peekCommand(state);\n      lastPlug.openBracket(ch);\n      source.eat(ch);\n      setState(state, normal);\n      return \"bracket\";\n    }\n    if (/[ \\t\\r]/.test(ch)) {\n      source.eat(ch);\n      return null;\n    }\n    setState(state, normal);\n    popCommand(state);\n\n    return normal(source, state);\n  }\n\n  return {\n    startState: function() {\n      var f = mathMode ? function(source, state){ return inMathMode(source, state); } : normal;\n      return {\n        cmdState: [],\n        f: f\n      };\n    },\n    copyState: function(s) {\n      return {\n        cmdState: s.cmdState.slice(),\n        f: s.f\n      };\n    },\n    token: function(stream, state) {\n      return state.f(stream, state);\n    },\n    blankLine: function(state) {\n      state.f = normal;\n      state.cmdState.length = 0;\n    },\n    languageData: {\n      commentTokens: {line: \"%\"}\n    }\n  };\n};\n\nexport const stex = mkStex(false)\nexport const stexMath = mkStex(true)\n"],"names":["$2156a3164f635199$var$mkStex","mathMode","pushCommand","state","command","cmdState","push","peekCommand","length","addPluginPattern","pluginName","cmdStyle","styles","this","name","bracketNo","style","argument","styleIdentifier","openBracket","closeBracket","plugins","setState","f","normal","source1","state1","plug","match","cmdName","current","slice","hasOwnProperty","beginParams","source","inMathMode","ch","next","skipToEnd","test","eatWhile","context","i","getMostPowerful","endModeSeq","eatSpace","peek","eat","pop","popCommand","startState","copyState","s","token","stream","blankLine","languageData","commentTokens","line","$2156a3164f635199$export$e3fbceba7d482c39"],"version":3,"file":"stex.f3898da9.js.map"}