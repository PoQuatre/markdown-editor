{"mappings":"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","sources":["node_modules/@codemirror/legacy-modes/mode/smalltalk.js"],"sourcesContent":["var specialChars = /[+\\-\\/\\\\*~<>=@%|&?!.,:;^]/;\nvar keywords = /true|false|nil|self|super|thisContext/;\n\nvar Context = function(tokenizer, parent) {\n  this.next = tokenizer;\n  this.parent = parent;\n};\n\nvar Token = function(name, context, eos) {\n  this.name = name;\n  this.context = context;\n  this.eos = eos;\n};\n\nvar State = function() {\n  this.context = new Context(next, null);\n  this.expectVariable = true;\n  this.indentation = 0;\n  this.userIndentationDelta = 0;\n};\n\nState.prototype.userIndent = function(indentation, indentUnit) {\n  this.userIndentationDelta = indentation > 0 ? (indentation / indentUnit - this.indentation) : 0;\n};\n\nvar next = function(stream, context, state) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '\"') {\n    token = nextComment(stream, new Context(nextComment, context));\n\n  } else if (aChar === '\\'') {\n    token = nextString(stream, new Context(nextString, context));\n\n  } else if (aChar === '#') {\n    if (stream.peek() === '\\'') {\n      stream.next();\n      token = nextSymbol(stream, new Context(nextSymbol, context));\n    } else {\n      if (stream.eatWhile(/[^\\s.{}\\[\\]()]/))\n        token.name = 'string.special';\n      else\n        token.name = 'meta';\n    }\n\n  } else if (aChar === '$') {\n    if (stream.next() === '<') {\n      stream.eatWhile(/[^\\s>]/);\n      stream.next();\n    }\n    token.name = 'string.special';\n\n  } else if (aChar === '|' && state.expectVariable) {\n    token.context = new Context(nextTemporaries, context);\n\n  } else if (/[\\[\\]{}()]/.test(aChar)) {\n    token.name = 'bracket';\n    token.eos = /[\\[{(]/.test(aChar);\n\n    if (aChar === '[') {\n      state.indentation++;\n    } else if (aChar === ']') {\n      state.indentation = Math.max(0, state.indentation - 1);\n    }\n\n  } else if (specialChars.test(aChar)) {\n    stream.eatWhile(specialChars);\n    token.name = 'operator';\n    token.eos = aChar !== ';'; // ; cascaded message expression\n\n  } else if (/\\d/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d]/);\n    token.name = 'number';\n\n  } else if (/[\\w_]/.test(aChar)) {\n    stream.eatWhile(/[\\w\\d_]/);\n    token.name = state.expectVariable ? (keywords.test(stream.current()) ? 'keyword' : 'variable') : null;\n\n  } else {\n    token.eos = state.expectVariable;\n  }\n\n  return token;\n};\n\nvar nextComment = function(stream, context) {\n  stream.eatWhile(/[^\"]/);\n  return new Token('comment', stream.eat('\"') ? context.parent : context, true);\n};\n\nvar nextString = function(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextSymbol = function(stream, context) {\n  stream.eatWhile(/[^']/);\n  return new Token('string.special', stream.eat('\\'') ? context.parent : context, false);\n};\n\nvar nextTemporaries = function(stream, context) {\n  var token = new Token(null, context, false);\n  var aChar = stream.next();\n\n  if (aChar === '|') {\n    token.context = context.parent;\n    token.eos = true;\n\n  } else {\n    stream.eatWhile(/[^|]/);\n    token.name = 'variable';\n  }\n\n  return token;\n};\n\nexport const smalltalk = {\n  startState: function() {\n    return new State;\n  },\n\n  token: function(stream, state) {\n    state.userIndent(stream.indentation(), stream.indentUnit);\n\n    if (stream.eatSpace()) {\n      return null;\n    }\n\n    var token = state.context.next(stream, state.context, state);\n    state.context = token.context;\n    state.expectVariable = token.eos;\n\n    return token.name;\n  },\n\n  blankLine: function(state, indentUnit) {\n    state.userIndent(0, indentUnit);\n  },\n\n  indent: function(state, textAfter, cx) {\n    var i = state.context.next === next && textAfter && textAfter.charAt(0) === ']' ? -1 : state.userIndentationDelta;\n    return (state.indentation + i) * cx.unit;\n  },\n\n  languageData: {\n    indentOnInput: /^\\s*\\]$/\n  }\n}\n"],"names":["$3f5e5b12cbe172c9$var$specialChars","$3f5e5b12cbe172c9$var$keywords","$3f5e5b12cbe172c9$var$Context","tokenizer","parent","this","next","$3f5e5b12cbe172c9$var$Token","name","context","eos","$3f5e5b12cbe172c9$var$State","$3f5e5b12cbe172c9$var$next","expectVariable","indentation","userIndentationDelta","prototype","userIndent","indentUnit","stream","state","token","aChar","$3f5e5b12cbe172c9$var$nextComment","$3f5e5b12cbe172c9$var$nextString","peek","$3f5e5b12cbe172c9$var$nextSymbol","eatWhile","$3f5e5b12cbe172c9$var$nextTemporaries","test","Math","max","current","eat","$3f5e5b12cbe172c9$export$996e8256cd7a0f08","startState","eatSpace","token1","blankLine","indent","textAfter","cx","i","charAt","unit","languageData","indentOnInput"],"version":3,"file":"smalltalk.d2ddf03f.js.map"}