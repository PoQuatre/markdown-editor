{"mappings":"sVAAA,IAAAA,EAAAC,EAAA,gDAMMC,EAAe,CAACC,UAAU,KAAKC,OAAO,GAAIC,QAAQ,GAAIC,MAAM,GAAIC,UAAU,GAAIC,OAAO,GAAIC,QAAQ,GAAIC,GAAG,GAAIC,IAAI,GAAIC,IAAI,GAAIC,IAAI,GAAIC,IAAI,GAAIC,IAAI,IAChJC,EAAsBC,EAAAC,SAASC,YAAY,CAC/CC,QAAS,GACTC,OAAQ,2GACRC,UAAW,oDACXC,KAAM,4CACNC,UAAW,kFACXC,QAAS,GACTC,UAAW,CACT,CAACC,EAAAC,SAASC,SAAU,EAAE,KACtB,CAACF,EAAAC,SAASE,SAAU,EAAE,KACtB,CAACH,EAAAC,SAASG,OAAO,EAAG,EAAE,EAAE,EAAE,EAAE,GAAG,GAAG,eAEpCC,aAAc,CAAC,EAAE,EAAE,GACnBC,gBAAiB,EACjBC,UAAW,wkCACXC,WAAY,CAAC,GACbC,SAAU,CAACC,OAAS,CAAC,EAAE,IACvBC,YAAa,CAAC,CAACC,KAAM,EAAGC,IAAK,SAAAC,UAASvC,EAAauC,KAAU,KAC7DC,UAAW,IAGPC,EAA4B3C,EAAA4C,WAAWC,OAAO,CAChDC,OAAqB9B,EAAO+B,UAAU,CAClCC,MAAO,CACUhD,EAAAiD,eAAeC,IAAI,CAC5BC,IAAkBnD,EAAAoD,gBAAgB,CAAEC,QAAS,IAAKC,OAAO,MAEhDtD,EAAAuD,aAAaL,IAAI,CAC1BC,IAAKnD,EAAAwD,WACLC,aAAA,SAAaC,GAAQ,MAAO,CAAEC,KAAMD,EAAKC,KAAO,EAAGC,GAAIF,EAAKE,GAAK,MAExDC,EAAAC,UAAU,CACnBC,QAASF,EAAAG,KAAKC,QACdC,KAAML,EAAAG,KAAKG,SACXC,OAAQP,EAAAG,KAAKK,OACbC,OAAQT,EAAAG,KAAKO,OACbC,WAAYX,EAAAG,KAAKS,aACjBC,YAAab,EAAAG,KAAKW,YAClBlB,aAAcI,EAAAG,KAAKY,aACnB,MAAOf,EAAAG,KAAKa,WAIxBC,aAAc,CACVC,cAAe,CAAEC,KAAM,KAAMC,MAAO,CAAEC,KAAM,KAAMC,MAAO,OACzDC,cAAe,CAAEC,SAAU,CAAC,IAAK,SAGzC,SAASC,IACL,OAAO,IAAItF,EAAAuF,gBAAgB5C","sources":["node_modules/@codemirror/lang-wast/dist/index.js"],"sourcesContent":["import { LRLanguage, indentNodeProp, delimitedIndent, foldNodeProp, foldInside, LanguageSupport } from '@codemirror/language';\nimport { styleTags, tags } from '@codemirror/highlight';\nimport { LRParser } from '@lezer/lr';\nimport { NodeProp } from '@lezer/common';\n\n// This file was generated by lezer-generator. You probably shouldn't edit it.\nconst spec_Keyword = {__proto__:null,anyref:34, dataref:34, eqref:34, externref:34, i31ref:34, funcref:34, i8:34, i16:34, i32:34, i64:34, f32:34, f64:34};\nconst parser = /*@__PURE__*/LRParser.deserialize({\n  version: 13,\n  states: \"!^Q]QPOOOqQPO'#CbOOQO'#Cd'#CdOOQO'#Cl'#ClOOQO'#Ch'#ChQ]QPOOOOQO,58|,58|OxQPO,58|OOQO-E6f-E6fOOQO1G.h1G.h\",\n  stateData: \"!P~O_OSPOSQOS~OTPOVROXROYROZROaQO~OSUO~P]OSXO~P]O\",\n  goto: \"xaPPPPPPbPbPPPhPPPrXROPTVQTOQVPTWTVXSOPTV\",\n  nodeNames: \"âš  LineComment BlockComment Module ) ( App Identifier Type Keyword Number String\",\n  maxTerm: 17,\n  nodeProps: [\n    [NodeProp.openedBy, 4,\"(\"],\n    [NodeProp.closedBy, 5,\")\"],\n    [NodeProp.group, -6,6,7,8,9,10,11,\"Expression\"]\n  ],\n  skippedNodes: [0,1,2],\n  repeatNodeCount: 1,\n  tokenData: \"/Q~R^XY}YZ}]^}pq}rs!Stu!qxy&Vyz'S{|'X}!O'X!Q!R'b!R![)_!]!^,{#T#o-^~!SO_~~!VTOr!Srs!fs#O!S#O#P!k#P~!S~!kOZ~~!nPO~!S~!tiqr$cst$ctu$cuv$cvw$cwx$cz{$c{|$c}!O$c!O!P$c!P!Q$c!Q![$c![!]$c!^!_$c!_!`$c!`!a$c!a!b$c!b!c$c!c!}$c#Q#R$c#R#S$c#S#T$c#T#o$c#p#q$c#r#s$c~$hiV~qr$cst$ctu$cuv$cvw$cwx$cz{$c{|$c}!O$c!O!P$c!P!Q$c!Q![$c![!]$c!^!_$c!_!`$c!`!a$c!a!b$c!b!c$c!c!}$c#Q#R$c#R#S$c#S#T$c#T#o$c#p#q$c#r#s$c~&[PT~!]!^&_~&bRO!]&_!]!^&k!^~&_~&nTOy&_yz&}z!]&_!]!^&k!^~&_~'SOQ~~'XOS~~'[Q!Q!R'b!R![)_~'gUY~!O!P'y!Q![)_!g!h(j#R#S)s#X#Y(j#l#m)y~(ORY~!Q![(X!g!h(j#X#Y(j~(^SY~!Q![(X!g!h(j#R#S)X#X#Y(j~(mR{|(v}!O(v!Q![(|~(yP!Q![(|~)RQY~!Q![(|#R#S(v~)[P!Q![(X~)dTY~!O!P'y!Q![)_!g!h(j#R#S)s#X#Y(j~)vP!Q![)_~)|R!Q![*V!c!i*V#T#Z*V~*[VY~!O!P*q!Q![*V!c!i*V!r!s+n#R#S)y#T#Z*V#d#e+n~*vTY~!Q![+V!c!i+V!r!s+n#T#Z+V#d#e+n~+[UY~!Q![+V!c!i+V!r!s+n#R#S,o#T#Z+V#d#e+n~+qT{|,Q}!O,Q!Q![,^!c!i,^#T#Z,^~,TR!Q![,^!c!i,^#T#Z,^~,cSY~!Q![,^!c!i,^#R#S,Q#T#Z,^~,rR!Q![+V!c!i+V#T#Z+V~-OP!]!^-R~-WQP~OY-RZ~-R~-ciX~qr-^st-^tu-^uv-^vw-^wx-^z{-^{|-^}!O-^!O!P-^!P!Q-^!Q![-^![!]-^!^!_-^!_!`-^!`!a-^!a!b-^!b!c-^!c!}-^#Q#R-^#R#S-^#S#T-^#T#o-^#p#q-^#r#s-^\",\n  tokenizers: [0],\n  topRules: {\"Module\":[0,3]},\n  specialized: [{term: 9, get: value => spec_Keyword[value] || -1}],\n  tokenPrec: 0\n});\n\nconst wastLanguage = /*@__PURE__*/LRLanguage.define({\n    parser: /*@__PURE__*/parser.configure({\n        props: [\n            /*@__PURE__*/indentNodeProp.add({\n                App: /*@__PURE__*/delimitedIndent({ closing: \")\", align: false })\n            }),\n            /*@__PURE__*/foldNodeProp.add({\n                App: foldInside,\n                BlockComment(tree) { return { from: tree.from + 2, to: tree.to - 2 }; }\n            }),\n            /*@__PURE__*/styleTags({\n                Keyword: tags.keyword,\n                Type: tags.typeName,\n                Number: tags.number,\n                String: tags.string,\n                Identifier: tags.variableName,\n                LineComment: tags.lineComment,\n                BlockComment: tags.blockComment,\n                \"( )\": tags.paren\n            })\n        ]\n    }),\n    languageData: {\n        commentTokens: { line: \";;\", block: { open: \"(;\", close: \";)\" } },\n        closeBrackets: { brackets: [\"(\", '\"'] }\n    }\n});\nfunction wast() {\n    return new LanguageSupport(wastLanguage);\n}\n\nexport { wast, wastLanguage };\n"],"names":["$5gnvt","parcelRequire","$c8a73e9053299351$var$spec_Keyword","__proto__","anyref","dataref","eqref","externref","i31ref","funcref","i8","i16","i32","i64","f32","f64","$c8a73e9053299351$var$parser","$1bcST","LRParser","deserialize","version","states","stateData","goto","nodeNames","maxTerm","nodeProps","$33Vcp","NodeProp","openedBy","closedBy","group","skippedNodes","repeatNodeCount","tokenData","tokenizers","topRules","Module","specialized","term","get","value","tokenPrec","$c8a73e9053299351$export$fc83b0968ecdae3b","LRLanguage","define","parser","configure","props","indentNodeProp","add","App","delimitedIndent","closing","align","foldNodeProp","foldInside","BlockComment","tree","from","to","$hneOf","styleTags","Keyword","tags","keyword","Type","typeName","Number","number","String","string","Identifier","variableName","LineComment","lineComment","blockComment","paren","languageData","commentTokens","line","block","open","close","closeBrackets","brackets","$c8a73e9053299351$export$7343d4c2f65e7dfa","LanguageSupport"],"version":3,"file":"dist.6d33bb81.js.map"}